╔═══════════════════════════════════════════════════════════════════════════════╗
║                                                                               ║
║                   📋 PASOS FINALES PARA DESPLIEGUE EN VERCEL                 ║
║                              (5-10 Minutos)                                  ║
║                                                                               ║
╚═══════════════════════════════════════════════════════════════════════════════╝

✅ LO QUE YA ESTÁ HECHO:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Backend compilado
✅ Código pusheado a GitHub
✅ Configuración de Vercel lista
✅ Variables de entorno preparadas


🚀 PASO 1: DESPLEGAR BACKEND EN VERCEL (2-3 minutos)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1️⃣  Abre: https://vercel.com/dashboard

2️⃣  Click en "Add New" → "Project"

3️⃣  Conecta tu repositorio:
    - Busca y selecciona: gestion-despachos
    - Presiona "Import"

4️⃣  Configura el proyecto:
    - Framework: Other
    - ROOT DIRECTORY: backend
    - Build Command: npm run build
    - Output Directory: dist
    - Install Command: npm ci

5️⃣  Click en "Environment Variables" y AGREGA:

    Name: DATABASE_URL
    Value: postgresql://gestion_despachos_user:DN0eX71qsu0L3TVYxiPklmB2pVaNWPpi@dpg-d40hvrs9c44c73bbfna0-a.oregon-postgres.render.com/gestion_despachos?sslmode=require

    Name: JWT_SECRET
    Value: secreto_de_desarrollo_jwt_12345

    Name: DISABLE_AUTH
    Value: false

    Name: NODE_ENV
    Value: production

6️⃣  Click "Deploy"

⏳ Espera a que termine (2-3 minutos)

7️⃣  IMPORTANTE: Copia la URL que aparece
    Ej: https://gestion-despachos-backend.vercel.app


🚀 PASO 2: DESPLEGAR FRONTEND EN VERCEL (2-3 minutos)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1️⃣  En Vercel Dashboard, click "Add New" → "Project"

2️⃣  Conecta tu repositorio:
    - Busca y selecciona: gestion-despachos
    - Presiona "Import"

3️⃣  Configura el proyecto:
    - Framework: Create React App
    - ROOT DIRECTORY: . (punto, que significa raíz)
    - Build Command: npm run build
    - Output Directory: build
    - Install Command: npm ci

4️⃣  Click en "Environment Variables" y AGREGA:

    Name: REACT_APP_API_URL
    Value: https://[TU-URL-DEL-BACKEND]/api
    
    Ejemplo:
    Value: https://gestion-despachos-backend.vercel.app/api

5️⃣  Click "Deploy"

⏳ Espera a que termine (2-3 minutos)

7️⃣  Copia la URL del frontend
    Ej: https://gestion-despachos.vercel.app


✅ VERIFICACIÓN FINAL
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1️⃣  Abre tu URL: https://gestion-despachos.vercel.app

2️⃣  Login con:
    Usuario: admin
    Contraseña: admin123

3️⃣  Si ves la app cargando → ¡ÉXITO! ✅

4️⃣  Prueba los puntos clave:
    • Crear un ticket
    • Ver en Historial
    • Ir a Reportes → Filtrar
    • Descargar Excel
    • Generar PDF


⚠️ SI ALGO FALLA
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

❌ "Database connection error"
   → Verifica que DATABASE_URL está exacta en Vercel
   → Comprueba que Render está activo (https://render.com)

❌ "Cannot GET /"
   → Verifica que ROOT DIRECTORY del backend es "backend"
   → Verifica que ROOT DIRECTORY del frontend es "." (punto)

❌ "Frontend conecta a localhost"
   → Asegúrate de que REACT_APP_API_URL = [URL-del-backend]/api
   → No debe contener "localhost"

❌ "Login no funciona"
   → Usuario: admin
   → Contraseña: admin123
   → Verifica que DISABLE_AUTH=false en backend


📊 RESUMEN DE URLs FINALES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Frontend: https://gestion-despachos.vercel.app
Backend:  https://gestion-despachos-backend.vercel.app/api
Database: Render (PostgreSQL)


═══════════════════════════════════════════════════════════════════════════════
                    👉 Ve a Vercel y sigue los pasos arriba
                      Tu app estará viva en 5-10 minutos! 🚀
═══════════════════════════════════════════════════════════════════════════════
